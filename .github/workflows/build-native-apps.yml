name: Release

on:
  push:
    branches: [ "main" ]

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      AssemblyVersion: ${{ steps.nbgv.outputs.AssemblyVersion }}
      AssemblyFileVersion: ${{ steps.nbgv.outputs.AssemblyFileVersion }}
      AssemblyInformationalVersion: ${{ steps.nbgv.outputs.AssemblyInformationalVersion }}
      SemVer2: ${{ steps.nbgv.outputs.SemVer2 }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Set version information
        id: nbgv
        uses: dotnet/nbgv@v0.4.1
  build:
    needs:
      - version
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        include:
          - os: windows-latest
            rid: windows-x64
          - os: ubuntu-latest
            rid: linux-x64
          - os: ubuntu-latest
            rid: linux-arm64
          - os: macos-latest
            rid: osx-arm64
          - os: macos-latest
            rid: osx-x64
    
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3.3.2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-${{ matrix.rid }}-nuget-${{ hashFiles('**/*.csproj') }} #hash of project files
          restore-keys: |
            ${{ runner.os }}-${{ matrix.rid }}-nuget-
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Setup build enviroment
        shell: bash
        run: |
          echo "AssemblyVersion=${{ needs.version.outputs.AssemblyVersion }}" >> $GITHUB_ENV
          echo "AssemblyFileVersion=${{ needs.version.outputs.AssemblyFileVersion }}" >> $GITHUB_ENV
          echo "AssemblyInformationalVersion=${{ needs.version.outputs.AssemblyInformationalVersion }}" >> $GITHUB_ENV
      - name: .NET Publish - ${{ needs.version.outputs.SemVer2 }} (${{ matrix.rid }})
        run: |
          dotnet publish StrangeSoft.DotNetInstaller -o publish/ -r ${{ matrix.rid }}
      - name: Add version text file to published output
        shell: bash
        run: |
          echo $AssemblyFileVersion > publish/version.txt
      - name: Upload installer app with debug symbols
        uses: actions/upload-artifact
        with:
          name: ${{ matrix.rid }}-debug
          path: publish/*
      - name: Delete debug symbols
        shell: bash
        run: |
          rm publish/*.pdb
      - name: Upload installer app without debug symbols
        uses: actions/upload-artifact
        with:
          name: installer-${{ matrix.rid }}-${{ needs.version.outputs.AssemblyFileVersion }}
          path: publish/*'
  
  release:
    runs-on: ubuntu-latest
    needs:
      - version
      - build
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download build artifacts
        uses: actions/download-artifact@v4.0.0
      - name: Zip artifacts
        shell: bash
        run: |
          for dir in */
          do
            zip -j -r "$(basename $dir).zip" $dir/*
          done
      - name: Create Release
        uses: ncipollo/release-action@v1.13.0
        with:
          artifacts: "*.zip"
          generateReleaseNotes: true
          commit: main
          tag: "v${{ needs.version.outputs.SemVer2 }}"
          artifactErrorsFailBuild: true
          name: "Automatic Release - ${{ needs.version.outputs.SemVer2 }}"
          
    